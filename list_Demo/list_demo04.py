# 深浅拷贝、赋值“=”  与 嵌套列表 与  地址
# 对于不可变对象（数值，字符串，元组），各对象均指向同一地址；因对象不可变，原对象改变时指向新地址，其余复制对象仍指向原地址，不会随之改变

# 对于可变对象（列表，字典）：赋值“=”与原对象指向同一地址，浅拷贝和深拷贝分别创建新的对象，指向了新的地址
# 但浅拷贝、赋值“=”与原对象的子对象均指向同一地址，而深拷贝的子对象则创建了新的对象，指向了新的地址
# 故改变 复杂子对象 的值时，浅拷贝、赋值“=”会随之改变

# 浅拷贝不适用于嵌套列表，对于浅拷贝只能拷贝嵌套列表的外层，而对于内层只是对内层进行引用，当原嵌套列表子对象改变时，浅拷贝对象亦会随之改变
# copy.copy 浅拷贝: 只拷贝父对象(拷贝顶层)，不会拷贝对象的内部的子对象。
# copy.deepcopy 深拷贝: 拷贝所有对象 包括 子对象
import copy
x = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# 浅拷贝
y = x.copy()
z = copy.copy(x)
# 深拷贝
m = copy.deepcopy(x)

# 对于不可变对象（数值，字符串，元组），各对象均指向同一地址；
# 对象不可变，原对象改变时指向新地址，其余复制对象仍指向原地址，不会随之改变，
# 每次代码运行，地址均会改变
a = 1
b = a
c = copy.copy(a)
d = copy.deepcopy(a)
print(id(a))
# 2596863568176
print(id(b))
# 2596863568176
print(id(c))
# 2596863568176
print(id(d))
# 2596863568176
a = 2
print(id(a))
# 2596863568208
print(id(b))
# 2596863568176
print(b)
# 1

# 对于简单可变对象（列表，字典），赋值“=”与原对象指向同一地址，浅拷贝和深拷贝分别创建新的对象，指向了新的地址
# 故不改变 复杂子对象 的值时，仅赋值“=”会随之改变
list1 = [1, 2, 3]
list2 = list1
list3 = copy.copy(list1)
list4 = copy.deepcopy(list1)
print(id(list1))
# 2596869779200
print(id(list2))
# 2596869779200
print(id(list3))
# 2596869779264
print(id(list4))
# 2596869791808
print("——————————————————————————————————")
list1.append(55)
print(id(list1))
# 2596869779200
print(id(list2))
# 2596869779200
print(id(list3))
# 2596869779264
print(id(list4))
# 2596869791808
print(list1)
# [1, 2, 3, 55]
print(list2)
# [1, 2, 3, 55]
print(list3)
# [1, 2, 3]
print(list4)
# [1, 2, 3]

# 对于含复杂子对象的可变对象（列表，字典）：赋值“=”与原对象指向同一地址，浅拷贝和深拷贝分别创建新的对象，指向了新的地址
# 但浅拷贝、赋值“=”与原对象的子对象均指向同一地址，而深拷贝的子对象则创建了新的对象，指向了新的地址
# 故改变 复杂子对象 的值时，浅拷贝、赋值“=”会随之改变
list1 = [1, 2, [1, 2]]
list2 = list1
list3 = copy.copy(list1)
list4 = copy.deepcopy(list1)
print(id(list1[2]))
# 2277450014976
print(id(list2[2]))
# 2277450014976
print(id(list3[2]))
# 2277450014976
print(id(list4[2]))
# 2277450002368
print("——————————————————————————————————")
list1[2][1] = 3
print(id(list1[2]))
# 2277450014976
print(id(list2[2]))
# 2277450014976
print(id(list3[2]))
# 2277450014976
print(id(list4[2]))
# 2277450002368
print(list1)
# [1, 2, [1, 3]]
print(list2)
# [1, 2, [1, 3]]
print(list3)
# [1, 2, [1, 3]]
print(list4)
# [1, 2, [1, 2]]
